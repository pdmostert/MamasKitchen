import{storage as r,toast as m,showRecipeDetailsModal as u,loadHeaderFooter as p}from"./utils-DIW_K8zv.js";class v{constructor(e="app"){this.data={mealPlan:r.getMealPlan()||{},favorites:r.getFavorites()||[]},this.container=document.getElementById(e),this.days=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],this.mealTypes=[{key:"breakfast",label:"Breakfast"},{key:"lunch",label:"Lunch"},{key:"dinner",label:"Dinner"},{key:"snack",label:"Snack"}]}createElement(e,a="",n=""){const t=document.createElement(e);return a&&(t.className=a),n&&(t.textContent=n),t}createButton(e,a,n){const t=this.createElement("button",a,e);return n&&t.addEventListener("click",n),t}createMealPlan(){const e=this.createElement("div","meal-plan"),a=this.createElement("div","meal-plan-header"),n=this.createElement("h2","title","Weekly Meal Plan");a.appendChild(n),e.appendChild(a);const t=this.createElement("div","grid"),l=this.createElement("div");return t.appendChild(l),this.days.forEach(i=>{const s=this.createElement("div","day-header",i);t.appendChild(s)}),this.mealTypes.forEach(i=>{const s=this.createElement("div","meal-type-label",i.label);t.appendChild(s),this.days.forEach(d=>{const o=this.data.mealPlan[d]?.[i.key],h=this.createMealSlot(i.key,d,o);t.appendChild(h)})}),e.appendChild(t),e}createMealSlot(e,a,n){if(n){const t=this.createElement("div",`meal-slot ${e} filled`),l=document.createElement("img");l.src=n.image,l.alt=n.title,l.className="meal-image",t.appendChild(l);const i=this.createElement("div","meal-title",n.title);t.appendChild(i);const s=this.createElement("div","meal-actions"),d=this.createButton("View","meal-action-btn view-btn",()=>this.viewRecipeDetails(n)),o=this.createButton("Remove","meal-action-btn remove-btn",()=>this.removeMealFromPlan(a,e));return s.appendChild(d),s.appendChild(o),t.appendChild(s),t}else{const t=this.createElement("div",`meal-slot ${e}`),l=this.createElement("div","add-meal-text",`+ Add ${e.charAt(0).toUpperCase()+e.slice(1)}`);return t.appendChild(l),t.addEventListener("click",()=>this.handleAddMeal(a,e)),t}}handleAddMeal(e,a){const n=`/search/?type=${this.getMealTypeFilter(a)}&day=${e}&meal=${a}`;window.location.href=n}getMealTypeFilter(e){return{breakfast:"breakfast",lunch:"main course",dinner:"main course",snack:"snack"}[e]||"main course"}removeMealFromPlan(e,a){if(this.data.mealPlan[e]&&this.data.mealPlan[e][a]){const n=this.data.mealPlan[e][a];delete this.data.mealPlan[e][a],Object.keys(this.data.mealPlan[e]).length===0&&delete this.data.mealPlan[e],r.setMealPlan(this.data.mealPlan),this.render(),m.success(`Removed ${n.title} from meal plan`)}}viewRecipeDetails(e){const a=[...e.dishTypes||[],...e.diets||[],...e.cuisines||[]],n=(e.extendedIngredients||[]).map(t=>({name:t.nameClean||t.name||t.original,amount:t.amount?`${t.amount} ${t.unit}`:void 0}));u({...e,cookTime:e.readyInMinutes,tags:a,ingredients:n,instructions:e.instructions||e.analyzedInstructions?.[0]?.steps?.map(t=>t.step).join(" ")||""})}render(){this.container.innerHTML="";const e=this.createMealPlan();this.container.appendChild(e)}init(){this.render()}}async function E(){await p();const c=document.getElementById("main");c.innerHTML="",new v("main").init()}document.addEventListener("DOMContentLoaded",E);
